
  upstream backend {
    server localhost:8001;
  }

  upstream mapproxy {
    server localhost:8082;
  }

  server {
    listen 443 ssl;
    server_name {{ domain_name }};
    charset utf-8;

    access_log /var/log/nginx/{{ domain_name }}_access.log;
    error_log  /var/log/nginx/{{ domain_name }}_error.log;

    root {{ application_path }}/frontend/dist/;
    index index.html;

    client_max_body_size 20M;
    add_header Strict-Transport-Security "max-age=31536000";

    ssl on;
    ssl_certificate         /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;

    ssl_session_timeout 5m;
    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

    sendfile on;

    gzip on;
    gzip_http_version 1.1;
    gzip_disable msie6;
    gzip_vary on;

    gzip_comp_level 4;
    gzip_proxied any;
    gzip_types application/javascript application/json text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript image/png image/jpeg;

    # maintain the .well-known directory alias for renewals
    location /.well-known {
      alias /var/www/{{ domain_name }}/.well-known;
    }

    # frontend
    location / {
      try_files $uri $uri/ @rewrites;
    }

    location @rewrites {
      rewrite ^(.+)$ /index.html last;
    }

    # backend urls
    location ~ ^/(admin|api) {
      proxy_redirect http:// https://;
      proxy_pass http://backend;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_http_version 1.1;
      proxy_read_timeout 120;
    }

    # backend static
    location ~ ^/(staticfiles|media)/(.*)$ {
      proxy_pass http://backend/$1/$2;
    }

    # Some basic cache-control for static files to be sent to the browser
    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
      expires max;
      add_header Pragma public;
      add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    # mvt endpoint
    location ~ ^/cache/mvt/.+/\d+/\d+/\d+.pbf$ {
      internal;
      root /home/{{ ssh_user }};
      add_header  Content-Encoding  gzip;
    }

   # exports endpoint
    location ~ ^/cache/exports/[0-9]+_[0-9]+/(.*).zip$ {
      internal;
      root /home/{{ ssh_user }};
      add_header Content-Disposition "attachment; filename=$1.zip";
    }

    # temp data download location
    location ~ ^/cache/data/surveyarea.zip$ {
      internal;
      root /home/{{ ssh_user }};
      add_header Content-Disposition "attachment; filename=surveyarea.zip";
    }

    location /wms {
      expires 1w;
      proxy_pass          http://mapproxy;
      proxy_read_timeout  120;
      proxy_set_header    Host $host;
      proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_http_version  1.1;
    }
  }
